# frozen_string_literal: true

module Beekeeper
  module Formatter
    def self.snake_case(string)
      string
        .gsub(/::/, '/')
        .gsub(/([A-Z]+)([A-Z][a-z])/,'\1_\2')
        .gsub(/([a-z\d])([A-Z])/,'\1_\2')
        .tr("-", "_")
        .downcase
    end

    def self.capitalize_first(string)
      string[0] = string[0].capitalize
      string
    end

    def self.camel_case(string)
      string
        .split('_')
        .map{|e| capitalize_first e}
        .join
    end

    def self.inline_model(string)
      "#{camel_case string}Inline"
    end

    def self.indent(line_array, depth=1)
      line_array.map {|line| "#{"  " * depth}#{line}"}
    end

    def self.file_header(title, version, date)
      [
        '# This is an autogenerated file.',
        "# api title: #{title}, api version: #{version}, generation date: #{date}"
      ]
    end

    def self.comment(text)
      "# #{text}"
    end
  end
end
